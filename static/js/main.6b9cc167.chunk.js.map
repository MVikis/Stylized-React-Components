{"version":3,"sources":["components/Nav.js","components/Stylized Cards/ColorCards/Card.js","components/Stylized Cards/ColorCards/CardApp.js","components/Loaders/Spinner-Loader/SpinnerLoader.js","components/Home.js","components/Stylized Cards/3dCard/Card.js","components/Loaders/Jumping-Loader/JumpingLoader.js","App.js","components/Stylized Cards/Cards.js","components/Loaders/Loader.js","serviceWorker.js","index.js","imgs/blueShoe.png","imgs/greyShoe.png","imgs/yellowShoe.png"],"names":["Nav","links","className","to","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","map","link","key","id","size","icon","name","Card","style","imgs","numberOfImgs","forEach","element","index","push","useState","src","setSrc","usePalette","data","loading","error","SetPallete","img","darkVibrant","background","vibrant","number","onClick","fontWeight","CardApp","greyShoe","yellowShoe","blueShoe","array","SpinnerLoader","styled","div","Home","card","useRef","sneaker","info","ref","onMouseLeave","current","transition","transform","onMouseEnter","onMouseMove","e","offsets","getBoundingClientRect","w","clientWidth","h","clientHeight","bdsl","document","getElementById","scrollLeft","bdst","scrollTop","wMultiple","offsetX","pageX","left","offsetY","pageY","top","dy","yRotate","xRotate","mousemove","alt","JumpingLoader","library","add","faSpinner","faClock","faPlusCircle","faCheckCircle","faMinusCircle","comp","App","linksState","basename","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.6b9cc167.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const Nav = ({links}) => {\r\n    return(\r\n       \r\n  <nav className=\"navbar\">\r\n    <ul className=\"navbar-nav\">\r\n    <li className=\"logo\">\r\n         <Link className=\"nav-link\" to=\"/\">\r\n             <span className=\"link-text logo-text\">Functional components</span>\r\n             <svg\r\n               aria-hidden=\"true\"\r\n               focusable=\"false\"\r\n               data-prefix=\"fad\"\r\n               data-icon=\"angle-double-right\"\r\n               role=\"img\"\r\n               xmlns=\"http://www.w3.org/2000/svg\"\r\n               viewBox=\"0 0 448 512\"\r\n               className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\r\n             >\r\n               <g className=\"fa-group\">\r\n                 <path\r\n                   fill=\"currentColor\"\r\n                   d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\r\n                   className=\"fa-secondary\"\r\n                 ></path>\r\n                 <path\r\n                   fill=\"currentColor\"\r\n                   d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\r\n                   className=\"fa-primary\"\r\n                 ></path>\r\n               </g>\r\n             </svg>\r\n           </Link>\r\n         </li>\r\n      {links.map(link => \r\n       <li key={link.id} className=\"nav-item\">\r\n       <Link className=\"nav-link\" to={link.link}>\r\n         <FontAwesomeIcon size=\"2x\" className=\"fa-primary svg-inline--fa fa-clock fa-w-16\" icon={link.icon}/>\r\n      \r\n           <span className=\"link-text\">{link.name}</span>\r\n         \r\n         </Link>\r\n       </li>\r\n       \r\n      )}\r\n\r\n    </ul>\r\n  </nav>\r\n  \r\n  )\r\n}","import React, {  useState } from 'react'\r\n\r\nimport  {usePalette} from 'react-palette'\r\n\r\n\r\n\r\nexport default function Card({style, imgs, name}){\r\n\r\n   \r\n    let numberOfImgs = []\r\n   imgs.forEach((element,index) => {\r\n       \r\n       numberOfImgs.push(index)\r\n   });\r\n    const [src, setSrc] = useState(imgs[0])\r\n    const { data, loading, error } = usePalette(src)\r\n   function SetPallete(img){\r\n            const { data, loading, error } = usePalette(img)\r\n            return data.darkVibrant\r\n        }\r\n   \r\n\r\n    return(\r\n\r\n        <div id={style} className=\"card color\">\r\n                <img src={src} />\r\n                <div className=\"card-overlay\">\r\n                    <div className=\"card-circle\" style={{background:data.vibrant}}></div>\r\n                    <div className=\"card-container\">\r\n                        <h2>\r\n                            {name}\r\n                        </h2>\r\n                        <div className=\"color-flex\">\r\n                        <h4>\r\n                            Color:\r\n                            </h4>\r\n                           {numberOfImgs.map((number) => \r\n                               <span key={number} onClick={()=>setSrc(imgs[number])} style={{background:`${SetPallete(imgs[number])}`}}/>\r\n                           )}\r\n                   \r\n                        </div> \r\n                        <div className=\"card-button\" style={{background:data.vibrant, fontWeight:'400'}} >Buy</div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Card from './Card'\r\nimport './Card-style.css'\r\nimport greyShoe from '../../../imgs/greyShoe.png'\r\nimport yellowShoe from '../../../imgs/yellowShoe.png'\r\nimport blueShoe from '../../../imgs/blueShoe.png'\r\n\r\n\r\nexport default function CardApp({style}){\r\n \r\nconst imgs = [greyShoe,yellowShoe,blueShoe]\r\nconst[name, setName] = useState(\"Shoes\")\r\n    return(\r\n        <Card style={style} name={name} imgs={imgs}/>\r\n       \r\n    )\r\n}","import React from 'react'\r\nimport './S-Loader-style.css'\r\nconst array = [1,2,3]\r\n\r\nexport const SpinnerLoader = ({style}) => {\r\n    \r\n    \r\n    return(\r\n        <div id={style} className=\"loader-container\">\r\n          <div className=\"circle-container\">\r\n              {array.map(index =>\r\n                <div key={index} className=\"circle\">\r\n                </div>\r\n                )}\r\n          </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport CardApp from './Stylized Cards/ColorCards/CardApp'\r\nimport styled from 'styled-components'\r\nimport { SpinnerLoader } from './Loaders/Spinner-Loader/SpinnerLoader'\r\n\r\nconst Style = styled.div`\r\nperspective: 100px;\r\ntransform-style: preserve-3d;\r\ntransform: rotateY(45deg) rotateX(333deg)\r\n`\r\n\r\nexport const Home = () => {\r\n    const threeD = 'three-d'\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"title-container row\">\r\n                <div>\r\n                <span className=\"main-title\">\r\n                    Functional components\r\n                </span>\r\n                <span className=\"side-title\">\r\n                    Components for all React.js applications\r\n                </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"image-container\">\r\n               <div className=\"showcase\">\r\n               \r\n               <SpinnerLoader style={threeD}/>\r\n               </div>\r\n               \r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react'\r\nimport blueShoe from '../../../imgs/blueShoe.png'\r\nimport './3dcard-style.css'\r\n\r\nexport const Card = () => {\r\n\r\n    const card = useRef()\r\n    const sneaker = useRef()\r\n    const info = useRef()\r\n    \r\n\r\n    function mousemove(e){\r\n       \r\n        \r\n       \r\n        let offsets = card.current.getBoundingClientRect(),\r\n        w = card.current.clientWidth,\r\n        h = card.current.clientHeight,\r\n        bdsl = document.getElementById('App').scrollLeft,\r\n        bdst = document.getElementById('App').scrollTop,\r\n        wMultiple = 320/w,\r\n        offsetX = 0.52 - (e.pageX - offsets.left )/w,\r\n        offsetY = 0.52 - (e.pageY - offsets.top )/h,\r\n        dy = (e.pageY - offsets.top - bdst) - h / 2,\r\n\t\tdx = (e.pageX - offsets.left - bdsl) - w / 2,\r\n        yRotate = (offsetX - dx)*(0.07 * wMultiple),\r\n\t\txRotate = (dy - offsetY)*(0.1 * wMultiple);\r\n        card.current.style.transform = `rotateY(${yRotate}deg) rotateX(${xRotate}deg)`;\r\n    }\r\n    function mouseleave(e){\r\n        card.current.style.transition = \"all 0.5s ease\";\r\n        info.current.style.transform = \"translateZ(0px)\";\r\n        card.current.style.transform = `rotateY(0deg) rotateX(0deg)`;\r\n        sneaker.current.style.transform = \"translateZ(0px)\";\r\n    }\r\n\r\n    function mouseenter(){\r\n        card.current.style.transition =\"none\"\r\n        sneaker.current.style.transform = \"translateZ(100px)\";\r\n        info.current.style.transform = \"translateZ(80px)\";\r\n    }\r\n   \r\n  \r\n   \r\n    \r\n\r\n    return(\r\n        <div ref={card}\r\n         onMouseLeave={()=>mouseleave()}\r\n         onMouseEnter={()=>mouseenter()}\r\n         onMouseMove={(e)=>mousemove(e)}  className=\"card\">\r\n            <div className=\"sneaker\">\r\n                <div className=\"circle-threeD\"></div>\r\n                <img ref={sneaker} src={blueShoe} alt=\"adidas\"/>\r\n            </div>\r\n            <div ref={info} className=\"info\">\r\n                <h2 className=\"title\">Nike ZX</h2>\r\n                <h3>FUTURE-READY TRAINERS WITH WRAPPED BOOST FOR EXCEPTION COMFORT.</h3>\r\n               \r\n                \r\n            </div>\r\n            <div className=\"purchase-button\" >\r\n                   Purchase\r\n                </div>\r\n        </div>\r\n        \r\n   \r\n    )\r\n}","import React from 'react'\r\nimport './Loader-style.css'\r\nconst array = [1,2,3,4,5]\r\n\r\nexport const JumpingLoader = () => {\r\n    \r\n    \r\n    return(\r\n        <div className=\"loader-container\">\r\n            {array.map(index =>\r\n            <div className=\"blob-container\" key={index}>\r\n                 <div className=\"blob\"/>\r\n            </div>\r\n                )}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {Switch, Route, HashRouter} from 'react-router-dom'\r\nimport './App.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSpinner, faClock, faPlusCircle, faCheckCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {Nav} from './components/Nav.js'\r\nimport {Home} from './components/Home'\r\nimport {Cards} from './components/Stylized Cards/Cards'\r\nimport {Loader} from './components/Loaders/Loader'\r\nlibrary.add( faSpinner, faClock, faPlusCircle, faCheckCircle, faMinusCircle)\r\n\r\nconst links = [\r\n  {\r\n    id:1,\r\n    comp: Cards,\r\n    name: 'Product Card',\r\n    link: '/cardcomp',\r\n    icon: 'clock'\r\n  },\r\n  {\r\n    id:2,\r\n    comp: Loader,\r\n    name: 'Loader',\r\n    link: '/loader',\r\n    icon: 'spinner'\r\n  }\r\n\r\n]\r\n\r\nfunction App() {\r\n  const [linksState, setLinks] = useState(links)\r\n  return (\r\n    <HashRouter basename='/'>\r\n    <div id=\"App\" className=\"App\">\r\n      <Nav links={linksState}/>\r\n      <header className=\"App-header\">\r\n        \r\n      <Switch>\r\n      <Route path=\"/\" exact component={Home}/>\r\n      {linksState.map(link =>\r\n        <Route key={link.id} path={link.link} component={link.comp}/>\r\n        )}\r\n      \r\n      </Switch>\r\n      \r\n      </header>\r\n    </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport CardApp from './ColorCards/CardApp'\r\nimport {Card} from './3dCard/Card'\r\n\r\nexport const Cards = () => {\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <CardApp />\r\n            <Card />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { JumpingLoader } from './Jumping-Loader/JumpingLoader'\r\nimport { SpinnerLoader } from './Spinner-Loader/SpinnerLoader'\r\n\r\n\r\nexport const Loader = () => {\r\n    \r\n    \r\n    return(\r\n        <div className=\"row\">\r\n            <SpinnerLoader/>\r\n            <JumpingLoader/>\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/blueShoe.602045c1.png\";","module.exports = __webpack_public_path__ + \"static/media/greyShoe.a75b7f37.png\";","module.exports = __webpack_public_path__ + \"static/media/yellowShoe.c03aaef8.png\";"],"sourceRoot":""}